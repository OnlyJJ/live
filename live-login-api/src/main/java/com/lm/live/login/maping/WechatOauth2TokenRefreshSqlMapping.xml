<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
    "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
   
<mapper namespace="com.lm.live.login.domain.sqlmapping.WechatOauth2TokenRefresh">
	<resultMap type="com.lm.live.login.domain.WechatOauth2TokenRefresh" id="vo">
	    <result property="id" column="id" />
	    <result property="appid" column="appid" />
	    <result property="openid" column="openid" />
	    <result property="code" column="code" />
	    <result property="accessToken" column="accessToken" />
	    <result property="expiresinSecond" column="expiresinSecond" />
	    <result property="refreshToken" column="refreshToken" />
	    <result property="scope" column="scope" />
	    <result property="resultTime" column="resultTime" />
	</resultMap>

	<select id="getObjectById" parameterType="int" resultMap="vo">
		select * from t_wechat_oauth2_token_refresh where id=#{id}
	</select>
	
	<delete id="removeById" parameterType="int">
		delete from t_wechat_oauth2_token_refresh where id = #{id}
	</delete>
	
	<delete id="removeByIds" >
		delete from t_wechat_oauth2_token_refresh where id in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>	
	
	<delete id="removeEntityBatch" parameterType="java.util.List">
		delete from t_wechat_oauth2_token_refresh where id in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item.id}
		</foreach>
	</delete>	

	<select id="getListByPage"  resultMap="vo">
		select * from t_wechat_oauth2_token_refresh 
	<where>
	 	<if test="appid != null and appid != ''">
			AND appid like '%${appid}%'
		</if> 	
	 	<if test="openid != null and openid != ''">
			AND openid like '%${openid}%'
		</if> 	
	 	<if test="code != null and code != ''">
			AND code like '%${code}%'
		</if> 	
	 	<if test="accessToken != null and accessToken != ''">
			AND accessToken like '%${accessToken}%'
		</if> 	
		<if test="expiresinSecond != null">
			AND expiresinSecond = #{expiresinSecond}
		</if>	
	 	<if test="refreshToken != null and refreshToken != ''">
			AND refreshToken like '%${refreshToken}%'
		</if> 	
	 	<if test="scope != null and scope != ''">
			AND scope like '%${scope}%'
		</if> 	
		<if test="ltResultTime != null and ltResultTime != ''">
			<![CDATA[AND resultTime >= #{ltResultTime} ]]>
		</if> 
		<if test="gtResultTime != null and gtResultTime != ''">
			<![CDATA[AND resultTime <= #{gtResultTime} ]]>
		</if> 
		<if test="appendWhere != null and appendWhere != ''">
			${appendWhere}
		</if>           
      </where>
        ORDER BY 
		<choose>
			<when test="orderBy != null and orderBy != ''">
				${orderBy}
			</when>
			<otherwise>
				id
			</otherwise>
		</choose>
		<choose>
			<when test="descOrAsc != null and descOrAsc != ''">
				${descOrAsc}
			</when>
			<otherwise>
				asc 
			</otherwise>
		</choose>
	</select>
	  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
	  <!--
	  <selectKey resultType="int" keyProperty="baseId" order="BEFORE">select nextval('seq_xxx')</selectKey>
	  -->
	  <![CDATA[
	  INSERT INTO t_wechat_oauth2_token_refresh(
			id,
			appid,
			openid,
			code,
			accessToken,
			expiresinSecond,
			refreshToken,
			scope,
			resultTime
			) VALUES (
			#{id,jdbcType=VARCHAR},
			#{appid,jdbcType=VARCHAR},
			#{openid,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{accessToken,jdbcType=VARCHAR},
			#{expiresinSecond,jdbcType=VARCHAR},
			#{refreshToken,jdbcType=VARCHAR},
			#{scope,jdbcType=VARCHAR},
			#{resultTime,jdbcType=VARCHAR}
		)	
		]]>
	  </insert>
	  
	  <insert id="insertBatch" parameterType="java.util.List">
	  <![CDATA[
	  		INSERT INTO t_wechat_oauth2_token_refresh(
			id,
			appid,
			openid,
			code,
			accessToken,
			expiresinSecond,
			refreshToken,
			scope,
			resultTime
			) VALUES 
		]]>
		<foreach collection="list" item="item" separator=",">
		<![CDATA[
			 (#{item.id,jdbcType=VARCHAR},#{item.appid,jdbcType=VARCHAR},#{item.openid,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.accessToken,jdbcType=VARCHAR},#{item.expiresinSecond,jdbcType=VARCHAR},#{item.refreshToken,jdbcType=VARCHAR},#{item.scope,jdbcType=VARCHAR},#{item.resultTime,jdbcType=VARCHAR})
		]]>
		</foreach>
	  </insert>
	  
	  <update id="update">
		UPDATE t_wechat_oauth2_token_refresh
			<set>
			 	<if test="appid != null">
					<![CDATA[appid = #{appid,jdbcType=VARCHAR},  ]]>
				</if> 	
			 	<if test="openid != null">
					<![CDATA[openid = #{openid,jdbcType=VARCHAR},  ]]>
				</if> 	
			 	<if test="code != null">
					<![CDATA[code = #{code,jdbcType=VARCHAR},  ]]>
				</if> 	
			 	<if test="accessToken != null">
					<![CDATA[accessToken = #{accessToken,jdbcType=VARCHAR},  ]]>
				</if> 	
				<if test="expiresinSecond != null">
					 <![CDATA[ expiresinSecond = #{expiresinSecond,jdbcType=VARCHAR},  ]]>
				</if>	
			 	<if test="refreshToken != null">
					<![CDATA[refreshToken = #{refreshToken,jdbcType=VARCHAR},  ]]>
				</if> 	
			 	<if test="scope != null">
					<![CDATA[scope = #{scope,jdbcType=VARCHAR},  ]]>
				</if> 	
				<if test="resultTime != null">
					<![CDATA[resultTime = #{resultTime,jdbcType=VARCHAR}  ]]>
				</if> 
			</set>
			<where>
			 <![CDATA[ and id = #{id,jdbcType=VARCHAR} ]]>  			  	
			</where>  
	  </update>	
	  
	   <select id="getByCode"  resultMap="vo">
		select * from t_wechat_oauth2_token_refresh where code=#{code}
	   </select>
	   
	    <select id="findExpireSoonList"  resultMap="vo">
	    	<![CDATA[
			SELECT * FROM t_wechat_oauth2_token_refresh  a
			WHERE DATE_ADD(a.resultTime,INTERVAL a.expiresinSecond SECOND) > NOW()
			AND TIMESTAMPDIFF(SECOND,CURRENT_TIMESTAMP(), DATE_ADD(a.resultTime,INTERVAL a.expiresinSecond SECOND)) <= #{soonSecond}
			]]>
	   </select>
	   
    <delete id="delExpireAccessToken" parameterType="int">
    	<![CDATA[
			delete from t_wechat_oauth2_token_refresh 
			WHERE DATE_ADD(resultTime,INTERVAL expiresinSecond SECOND) <= NOW()
		]]>
	</delete>
	   
</mapper>
