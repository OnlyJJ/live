#父级
log4j.rootLogger=info,development
log4j.appender.development=org.apache.log4j.ConsoleAppender
log4j.appender.development.layout=org.apache.log4j.PatternLayout
log4j.appender.development.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss:SSS} %5p [%t] (%F:%L) - %m%n

##car模块输出 
#INFO及以上级别的log进行输出
log4j.logger.car=info,car 
#以文件类型输出   
log4j.appender.car=org.apache.log4j.DailyRollingFileAppender   
#输出路径
log4j.appender.car.File=E:/STS/sts-bundle/logs/car_web.log
#配置文件输出的文件命名，这种格式文件会在凌晨生成一个文件，想在其他时间生成新文件可以查看DatePattern的相关配置
log4j.appender.car.DatePattern= .yyyy-MM-dd
#输出格式
log4j.appender.car.layout=org.apache.log4j.PatternLayout  
log4j.appender.car.layout.ConversionPattern= %d{yyyy-MM-dd HH:mm:ss:SSS} %5p [%t] (%F:%L) - %m%n
# 设置这个子Logger输出日志不在父级别logger里面输出
log4j.additivity.car=false

##pay模块输出 
log4j.logger.pay=info,pay 
log4j.appender.pay=org.apache.log4j.DailyRollingFileAppender   
log4j.appender.pay.File=E:/STS/sts-bundle/logs/pay-service.log
log4j.appender.pay.DatePattern= .yyyy-MM-dd
log4j.appender.pay.layout=org.apache.log4j.PatternLayout  
log4j.appender.pay.layout.ConversionPattern= %d{yyyy-MM-dd HH:mm:ss:SSS} %5p [%t] (%F:%L) - %m%n
log4j.additivity.car=false